{
  "openapi": "3.0.0",
  "info": {
    "title": "Jedi API Example",
    "version": "1.0.0",
    "description": "This is a REST API application made with Express for learning purposes, so it uses an array of objects (Jedis) to simulate the data.\n\n Some useful links: \n\n- [The source API definition for Jedi API](https://github.com/mauriciorfdev/test-api-swagger/blob/main/swagger/swagger.json) "
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [{ "name": "Jedi", "description": "Operations about Jedis" }],
  "paths": {
    "/jedis": {
      "get": {
        "tags": ["Jedi"],
        "summary": "Returns a list of jedis",
        "description": "Optional extended description in CommonMark or HTML.",
        "responses": {
          "200": {
            "description": "OK - Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Jedi"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Jedi"],
        "summary": "Add a jedi",
        "description": "Optional extended description in CommonMark or HTML.",
        "requestBody": {
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Jedi"
                }
              }
            }
          },
          "400": {
            "description": "Invalid name supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          }
        }
      }
    },
    "/jedis/{id}": {
      "get": {
        "tags": ["Jedi"],
        "summary": "Get a single jedi",
        "description": "Optional extended description in CommonMark or HTML.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Jedi to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Jedi"
                }
              }
            }
          },
          "404": {
            "description": "Jedi Not Found"
          }
        }
      },
      "put": {
        "tags": ["Jedi"],
        "summary": "Update a Jedi",
        "description": "Optional extended description in CommonMark or HTML.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Jedi to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Jedi"
                }
              }
            }
          },
          "400": {
            "description": "Invalid name supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Jedi Not Found"
          }
        }
      },
      "delete": {
        "tags": ["Jedi"],
        "summary": "Delete a Jedi",
        "description": "Optional extended description in CommonMark or HTML.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Jedi to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Jedi Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Jedi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
